<script>
	<head/>
		<body>
		<snippet id="fetch_template">
			<!-- WE EXPECT THIS QUERY RESPONSE TO CONTAIN THE XML NEEDED FOR THE CONFERENCE ROOM -->
			<!-- IF YOUR CONFERENCE XML DOES NOT NEED TO BE DYNAMIC, YOU COULD JUST PLACE IT IN THIS BLOCK INSTEAD OF USING A QUERY -->
			<query url="/voyant/webhook/inbound/" method="post">
				<param name='NewCall' value='false'/>
		        <param name='ForwardedFrom' value='{{@Diversion}}'/>
		        <param name='OriginalCallId' value='{{X-OrigCallId}}'/>
		        <param name='OrigTo' value='{{X-Orig-To}}'/>
		        <param name='AccountId' value='{{X-Account-Id}}'/>
		        <param name='AnonymousCall' value='{{X-Anonymous-Call}}'/>
		        <param name='CalleeId' value='{{INBOUND_CALLEE_ID}}'/>
		        <param name='CallerNumber' value='{{INBOUND_CALLER_NUMBER}}'/>
		        <param name='CalleeNumber' value='template-{{TEMPLATE_TOKEN}}'/>
		        <param name='OriginalCalleeNumber' value='{{INBOUND_CALLEE_NUMBER}}'/>
		        <param name='CallerId' value='{{INBOUND_CALLER_ID}}'/>
		        <param name='ScriptId' value='{{SCRIPT_ID}}'/>
		        <param name='Direction' value='{{DIRECTION}}'/>
		        <param name='CallId' value='{{CALL_ID}}'/>
				<onError>
					<say TEXT="An error occured">
						<onComplete>
							<goodbye/>
						</onComplete>
					</say>
				</onError>
			</query>
		</snippet>
		<snippet id='no_room'>
			<say TEXT='Invalid meeting ID.'>
				<onComplete>
					<initial_prompt ROOM=''>
						<onError>
							<goodbye/>
						</onError>
					</initial_prompt>
				</onComplete>
			</say>
		</snippet>
		<snippet id='no_pin'>
			<say TEXT='Invalid PIN.'>
				<onComplete>
					<second_prompt PIN=''>
						<onError>
							<goodbye/>
						</onError>
					</second_prompt>
				</onComplete>
			</say>
		</snippet>
		<snippet id="pin_auth">
			<match a="{{PIN}}" b="{{TEMPLATE_PIN}}" type="equals">
				<onTrue>
					<fetch_template/>
				</onTrue>
				<onFalse>
					<no_pin/>
				</onFalse>
			</match>
		</snippet>
		<snippet id="submit_room">
			<query url="/voyant/callback/" method="post">
				<param name="type" value="FetchTemplate"/>
				<param name="by" value="digits"/>
				<param name="SearchValue" value="{{ROOM}}"/>
				<onError>
					<say TEXT="An error occured">
						<onComplete>
							<goodbye/>
						</onComplete>
					</say>
				</onError>
			</query>
			<!-- Here, we expect a server response containing either:
			<no_room/> or
			<second_prompt TEMPLATE_PIN='123456'/> -->
		</snippet>
		<snippet id='initial_prompt' limit='4'>
			<snippet id="get_room" limit="6">
				<input_timer/>
				<onDTMF ref="ROOM">
					<cancel-timeout target='input_timer'/>
					<get_room>
						<onError>
							<submit_room/>
						</onError>
					</get_room>
				</onDTMF>
			</snippet>
			<snippet id='input_timer'>
				<timeout seconds='10' alias='input_timer'>
					<onComplete>
						<no_room/>
					</onComplete>
				</timeout>
			</snippet>
			<say TEXT="Please enter your meeting ID."/>
			<flush event='onDTMF'/>
			<get_room/>
		</snippet>
		<snippet id='second_prompt' limit='4'>
			<snippet id="get_pin" limit="6">
				<input_timer/>
				<onDTMF ref="PIN">
					<cancel-timeout target='input_timer'/>
					<get_pin>
						<onError>
							<pin_auth/>
						</onError>
					</get_pin>
				</onDTMF>
			</snippet>
			<snippet id='input_timer'>
				<timeout seconds='10' alias='input_timer'>
					<onComplete>
						<no_pin/>
					</onComplete>
				</timeout>
			</snippet>
			<say TEXT="Please enter the access PIN."/>
			<flush event='onDTMF'/>
			<get_pin/>
		</snippet>
		<snippet id='goodbye'>
			<say TEXT='Goodbye!'>
				<onComplete>
					<hangup/>
				</onComplete>
			</say>
		</snippet>
		<snippet id="global-hangup">
			<query method="post" url="/voyant/callback/">
				<optional name="type" value="hangup"></optional>
				<optional name="callId" value="{{X-OrigCallId}}"></optional>
			</query>
		</snippet>
		<accept/>
		<ring/>
		<answer alias="{{X-OrigCallId}}">
			<onConnect>
				<say TEXT='HELLO!'>
					<onComplete>
						<initial_prompt/>
					</onComplete>
				</say>
			</onConnect>
			<onDisconnect>
				<run-snippet id="global-hangup"></run-snippet>
			</onDisconnect>
		</answer>
	</body>
</script>
